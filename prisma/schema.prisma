// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"

}

model Appointment {
  id                        Int      @id @default(autoincrement())
  appointmentScheduleFrom   DateTime @default(now())
  appointmentScheduleTo     DateTime @updatedAt
  appointmentType           String
  appointmentStatus         String
  appointmentPatientSession String
  appointmentPatientName    String

  patient   Patient @relation(fields: [patientId], references: [id])
  patientId Int     @unique

  doctor   Doctor @relation(fields: [doctorId], references: [id])
  doctorId Int

  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId Int      @unique

  @@index([patientId])
  @@index([doctorId])
}

model Doctor {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  modifiedAt     DateTime @updatedAt
  email          String   @unique
  firstName      String
  lastName       String
  contactNumber  String
  profession     String?
  qualification  String?
  case           String
  profilePicture String

  appointments Appointment[]
}

model Patient {
  id               Int      @id @unique @default(autoincrement())
  createdAt        DateTime @default(now())
  modifiedAt       DateTime @updatedAt
  title            String
  firstName        String
  middleInitial    String
  lastName         String
  phone            String
  email            String   @unique
  sex              String
  ssn              String
  dateOfBirth      DateTime
  street           String
  city             String
  state            String
  zip              String
  insuranceCompany String
  plan             String
  groupNumber      String
  cardHolder       String
  medications      String
  allergies        String
  surgeries        String
  familyHistory    String
  addictions       String
  questionnaire    String
  symptoms         String
  signature        String

  appointments Appointment[]
  schedules    Schedule[]
}

model Schedule {
  id               Int      @id @default(autoincrement())
  scheduleActivity String
  roomNumber       Int
  providerGroup    String
  userId           Int
  userName         String
  scheduleDate     DateTime
  scheduleFrom     DateTime
  scheduleTo       DateTime
  scheduleStatus   String

  patient   Patient @relation(fields: [patientId], references: [id])
  patientId Int

  appointment Appointment?

  @@index([patientId])
}
